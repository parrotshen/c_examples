#include <linux/socket.h>

struct sockaddr
{
    sa_family_t  sa_family;    /* address family: AF_xxx   */
    char         sa_data[14];  /* 14 bytes of protocol address */
};



#include <netinet/in.h>

/* Internet IP Protocol */
struct sockaddr_in
{
    sa_family_t    sin_family;  /* AF_INET */
    in_port_t      sin_port;    /* port in network byte order */
    struct in_addr
    {
        uint32_t   s_addr;      /* address in network byte order */
    }              sin_addr;    /* internet address */
};



#include <netinet/in.h>

/* IP version 6 */
struct sockaddr_in6 {
    sa_family_t        sin6_family;    /* AF_INET6 */
    in_port_t          sin6_port;      /* port number */
    uint32_t           sin6_flowinfo;  /* IPv6 flow information */
    struct in6_addr
    {
        unsigned char  s6_addr[16];    /* IPv6 address */
    }                  sin6_addr;      /* IPv6 address */
    uint32_t           sin6_scope_id;  /* Scope ID (new in 2.4) */
};



#include <sys/un.h>

/* Unix domain sockets */
struct sockaddr_un
{
    sa_family_t  sun_family;     /* AF_UNIX */
    char         sun_path[108];  /* Pathname */
};



#include <linux/netlink.h>

/* Netlink sockets */
struct sockaddr_nl
{
    sa_family_t     nl_family;  /* AF_NETLINK */
    unsigned short  nl_pad;     /* Zero */
    pid_t           nl_pid;     /* Port ID */
    __u32           nl_groups;  /* Multicast groups mask */
};



#include <linux/if_packet.h>

/* Packet family */
struct sockaddr_ll
{
    unsigned short  sll_family;    /* AF_PACKET */
    unsigned short  sll_protocol;  /* Physical-layer protocol */
    int             sll_ifindex;   /* Interface number */
    unsigned short  sll_hatype;    /* ARP hardware type */
    unsigned char   sll_pkttype;   /* Packet type */
    unsigned char   sll_halen;     /* Length of address */
    unsigned char   sll_addr[8];   /* Physical-layer address */
};


